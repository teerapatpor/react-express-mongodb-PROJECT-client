[{"D:\\ownerProject\\web\\src\\index.js":"1","D:\\ownerProject\\web\\src\\App.js":"2","D:\\ownerProject\\web\\src\\components\\Navbar.js":"3","D:\\ownerProject\\web\\src\\components\\Input.js":"4","D:\\ownerProject\\web\\src\\components\\Post.js":"5","D:\\ownerProject\\web\\src\\components\\Sidebar.js":"6","D:\\ownerProject\\web\\src\\form.js":"7","D:\\ownerProject\\web\\src\\home.js":"8","D:\\ownerProject\\web\\src\\components\\SidebarData.js":"9","D:\\ownerProject\\web\\src\\components\\User.js":"10","D:\\ownerProject\\web\\src\\login.js":"11","D:\\ownerProject\\web\\src\\components\\Login.js":"12","D:\\ownerProject\\web\\src\\states\\formState.js":"13","D:\\ownerProject\\web\\src\\states\\userState.js":"14","D:\\ownerProject\\web\\src\\register.js":"15","D:\\ownerProject\\web\\src\\chatLobby.js":"16","D:\\ownerProject\\web\\src\\Chatroom.js":"17","D:\\ownerProject\\web\\src\\components\\Chat.js":"18","D:\\ownerProject\\web\\src\\ChatLobby.js":"19","D:\\ownerProject\\web\\src\\api\\api.js":"20","D:\\ownerProject\\web\\src\\Editprofile.js":"21"},{"size":2678,"mtime":1615289195508,"results":"22","hashOfConfig":"23"},{"size":1349,"mtime":1615288061034,"results":"24","hashOfConfig":"23"},{"size":2916,"mtime":1615290436712,"results":"25","hashOfConfig":"23"},{"size":2596,"mtime":1615289619411,"results":"26","hashOfConfig":"23"},{"size":7178,"mtime":1614439538629,"results":"27","hashOfConfig":"23"},{"size":1816,"mtime":1611920299536,"results":"28","hashOfConfig":"23"},{"size":1069,"mtime":1611742460282,"results":"29","hashOfConfig":"23"},{"size":5132,"mtime":1614437916323,"results":"30","hashOfConfig":"23"},{"size":274,"mtime":1612087241120,"results":"31","hashOfConfig":"23"},{"size":140,"mtime":1610876877435,"results":"32","hashOfConfig":"23"},{"size":737,"mtime":1615290227380,"results":"33","hashOfConfig":"23"},{"size":4265,"mtime":1615290245276,"results":"34","hashOfConfig":"23"},{"size":332,"mtime":1612578676133,"results":"35","hashOfConfig":"23"},{"size":1835,"mtime":1615623847161,"results":"36","hashOfConfig":"23"},{"size":463,"mtime":1614439571931,"results":"37","hashOfConfig":"23"},{"size":1428,"mtime":1612088668961,"results":"38","hashOfConfig":"23"},{"size":5544,"mtime":1614694939788,"results":"39","hashOfConfig":"23"},{"size":1001,"mtime":1614439505112,"results":"40","hashOfConfig":"23"},{"size":5372,"mtime":1615633880293,"results":"41","hashOfConfig":"23"},{"size":139,"mtime":1615284624532,"results":"42","hashOfConfig":"23"},{"size":9279,"mtime":1615621183818,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"wng77z",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"46"},"D:\\ownerProject\\web\\src\\index.js",[],["98","99"],"D:\\ownerProject\\web\\src\\App.js",[],"D:\\ownerProject\\web\\src\\components\\Navbar.js",["100"],"import React, { useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { Button, Dropdown, DropdownButton } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport {\r\n  userMapStatetoProps,\r\n  userMapDispatchtoProps,\r\n} from \"../states/userState\";\r\nimport { connect } from \"react-redux\";\r\nimport { server_api } from \"../api/api\";\r\nfunction Navbar(props) {\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    // props.updateChatList();\r\n    if (localStorage.getItem(\"token\") !== null) {\r\n      const token = localStorage.getItem(\"token\");\r\n      axios({\r\n        url: `${server_api}/api/user/token`,\r\n        method: \"get\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: token,\r\n        },\r\n      }).then(async (res) => {\r\n        if (res.data.success === true) {\r\n          await props.userLogin(\r\n            true,\r\n            res.data.data._id,\r\n            res.data.data.username,\r\n            res.data.data.firstname,\r\n            res.data.data.lastname,\r\n            res.data.data.avatar,\r\n            res.data.data.role,\r\n            res.data.data.chatRecieverID,\r\n            token\r\n          );\r\n          await props.updateChatList();\r\n        } else {\r\n          history.push(\"/ลงชื่อเข้าใช้\");\r\n        }\r\n      });\r\n    }\r\n  }, []);\r\n  return (\r\n    <header className=\"Navbar\">\r\n      <label\r\n        style={{ fontSize: \"25px\", fontWeight: \"bold\", cursor: \"pointer\" }}\r\n        onClick={() => {\r\n          history.push(\"/\");\r\n          window.location.reload(true);\r\n        }}\r\n      >\r\n        ownerProject\r\n      </label>\r\n\r\n      {!props.user.login ? (\r\n        <Link to={\"/ลงชื่อเข้าใช้\"}>\r\n          <Button variant=\"outline-info\" className=\"login\">\r\n            ลงชื่อเข้าใช้\r\n          </Button>\r\n        </Link>\r\n      ) : (\r\n        <>\r\n          <Button\r\n            variant=\"outline-info\"\r\n            style={{ float: \"right\" }}\r\n            onClick={() => {\r\n              localStorage.removeItem(\"token\");\r\n              localStorage.removeItem(\"userID\");\r\n              props.userLogout(props.user.socketID);\r\n              alert(\"ออกจากระบบแล้ว\");\r\n              history.push(\"/\");\r\n            }}\r\n          >\r\n            ออกจากระบบ\r\n          </Button>\r\n          <DropdownButton\r\n            id=\"dropdown-basic-button\"\r\n            variant=\"outline-primary\"\r\n            title=\"Setting\"\r\n            style={{ float: \"right\", marginRight: \"20px\" }}\r\n          >\r\n            <Dropdown.Item href=\"แก้ไขข้อมูลส่วนตัว\">\r\n              edit Profile\r\n            </Dropdown.Item>\r\n          </DropdownButton>\r\n        </>\r\n      )}\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default connect(userMapStatetoProps, userMapDispatchtoProps)(Navbar);\r\n","D:\\ownerProject\\web\\src\\components\\Input.js",["101"],"import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { server_api } from \"../api/api\";\r\n// axios.create({\r\n//   baseURL: \"http://localhost:8888/api/image\",\r\n//   headers: {\r\n//     \"Content-type\": \"application/json\",\r\n//   },\r\n// });\r\n\r\nfunction Input({ addForm }) {\r\n  var formData = new FormData();\r\n  const [nameForm, setNameForm] = useState(\"\");\r\n  const [detail, setDetail] = useState(\"\");\r\n  const [imgURL, setImgURL] = useState(\"\");\r\n  const [file, setFile] = useState();\r\n\r\n  function onClick() {\r\n    if (nameForm !== \"\" && imgURL !== \"\") {\r\n      formData.append(\"productImage\", file);\r\n      formData.append(\"name\", nameForm);\r\n      formData.append(\"detail\", detail);\r\n\r\n      axios({\r\n        url: `${server_api}/api/post/create`,\r\n        method: \"post\",\r\n        data: formData,\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      }).then((result) => {\r\n        addForm(result.data.data);\r\n        alert(\"บันทึกสำเร็จ\");\r\n        window.location.reload(true);\r\n      });\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <div\r\n        className=\"head\"\r\n        style={{\r\n          position: \"absolute\",\r\n          top: 0,\r\n          right: 0,\r\n          top: 50,\r\n          height: \"91.5%\",\r\n        }}\r\n      >\r\n        <div className=\"Input__header\">create form</div>\r\n        <div className=\"Input\">\r\n          <span>ชื่อ</span>\r\n          <input\r\n            className=\"Input__field\"\r\n            type=\"text\"\r\n            placeholder=\"ใส่ชื่อของ ฟอร์มนี้\"\r\n            onChange={(e) => {\r\n              setNameForm(e.target.value);\r\n            }}\r\n          />\r\n          <br></br>\r\n          <span>รายละเอียด</span>\r\n          <input\r\n            className=\"Input__field\"\r\n            type=\"text\"\r\n            placeholder=\"ใส่รายละเอียดเพิ่มเติม\"\r\n            onChange={(e) => {\r\n              setDetail(e.target.value);\r\n            }}\r\n          />\r\n          <br></br>\r\n          <span>ไฟล์รูป </span>\r\n          <input\r\n            type=\"file\"\r\n            onChange={(e) => {\r\n              //console.log(e.target.files[0]);\r\n              setFile(e.target.files[0]);\r\n              setImgURL(e.target.files[0].name);\r\n            }}\r\n          />\r\n          <br></br>\r\n          <Button onClick={onClick}>บันทึกข้อมูล</Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Input;\r\n","D:\\ownerProject\\web\\src\\components\\Post.js",["102","103","104","105","106","107"],"import React from \"react\";\r\nimport SkyLight from \"react-skylight\";\r\nimport { connect } from \"react-redux\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport normal from \"../icon/normal.png\";\r\nimport like from \"../icon/like.png\";\r\nimport bin1 from \"../icon/bin1.png\";\r\nimport bin2 from \"../icon/bin2.png\";\r\nimport { server_api } from \"../api/api\";\r\nclass Post extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      binOutsrc: bin1,\r\n      binInsrc: bin1,\r\n    };\r\n\r\n    this.binInMouseOver = this.binInMouseOver.bind(this);\r\n    this.binInMouseOut = this.binInMouseOut.bind(this);\r\n    this.binOutMouseOver = this.binOutMouseOver.bind(this);\r\n    this.binOutMouseOut = this.binOutMouseOut.bind(this);\r\n  }\r\n\r\n  binInMouseOver() {\r\n    this.setState({\r\n      binInsrc: bin2,\r\n    });\r\n  }\r\n  binOutMouseOver() {\r\n    this.setState({\r\n      binOutsrc: bin2,\r\n    });\r\n  }\r\n  binInMouseOut() {\r\n    this.setState({\r\n      binInsrc: bin1,\r\n    });\r\n  }\r\n  binOutMouseOut() {\r\n    this.setState({\r\n      binOutsrc: bin1,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div\r\n          className=\"Post\"\r\n          style={{\r\n            width: 510,\r\n            height: 500,\r\n            marginLeft: \"12px\",\r\n            marginRight: \"12px\",\r\n          }}\r\n        >\r\n          {this.props.user.login ? (\r\n            <div>\r\n              {!this.props.userList.includes(this.props.user._id) ? (\r\n                <img\r\n                  className=\"Post__delete\"\r\n                  style={{\r\n                    width: \"50px\",\r\n                    height: \"50px\",\r\n                    float: \"left\",\r\n                    bottom: 0,\r\n                    position: \"absolute\",\r\n                  }}\r\n                  onClick={() => {\r\n                    this.props.likePost(this.props.id);\r\n                  }}\r\n                  onMouseOver={(e) => {}}\r\n                  src={normal}\r\n                />\r\n              ) : (\r\n                <img\r\n                  className=\"Post__delete\"\r\n                  style={{\r\n                    width: \"50px\",\r\n                    height: \"50px\",\r\n\r\n                    float: \"left\",\r\n                    bottom: 0,\r\n                    position: \"absolute\",\r\n                  }}\r\n                  onClick={() => {\r\n                    this.props.unlikePost(this.props.id);\r\n                  }}\r\n                  onMouseOver={(e) => {}}\r\n                  src={like}\r\n                />\r\n              )}\r\n            </div>\r\n          ) : (\r\n            <></>\r\n          )}\r\n\r\n          <div\r\n            style={{\r\n              position: \"absolute\",\r\n              zIndex: \"2\",\r\n              bottom: 0,\r\n              marginLeft: \"50px\",\r\n              marginBottom: \"20px\",\r\n              fontSize: \"20px\",\r\n              fontWeight: \"bold\",\r\n            }}\r\n          >\r\n            {this.props.score}\r\n          </div>\r\n\r\n          {this.props.user.role === \"admin\" ? (\r\n            <img\r\n              className=\"Post__delete\"\r\n              onClick={() => {\r\n                if (window.confirm(\"Confirm to delete this post click OK\")) {\r\n                  this.props.deletePost(this.props.id, this.props.imgURL);\r\n                }\r\n              }}\r\n              style={{\r\n                fontSize: \"10px\",\r\n                bottom: 0,\r\n                right: 0,\r\n                position: \"absolute\",\r\n                width: \"40px\",\r\n                height: \"45px\",\r\n              }}\r\n              onMouseOver={this.binOutMouseOver}\r\n              onMouseOut={this.binOutMouseOut}\r\n              src={this.state.binOutsrc}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          <div className=\"Post__title\">\r\n            {this.props.title}\r\n            <img\r\n              className=\"Post__image\"\r\n              src={`${server_api}/${this.props.imgURL}`}\r\n              style={{ cursor: \"pointer\" }}\r\n              onClick={() => {\r\n                this.simpleDialog.show();\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n        <SkyLight\r\n          dialogStyles={{\r\n            width: \"80%\",\r\n            height: \"90%\",\r\n            marginTop: \"-335px\",\r\n            marginLeft: \"-40%\",\r\n            backgroundColor: \"#343a40\",\r\n            color: \"#32A5B3\",\r\n            fontSize: \"20px\",\r\n            fontWeight: \"bold\",\r\n          }}\r\n          hideOnOverlayClicked\r\n          ref={(ref) => (this.simpleDialog = ref)}\r\n          title={\r\n            <div>\r\n              <Container style={{ alignItems: \"flex-end\" }}>\r\n                <Row top=\"xs\">\r\n                  <Col>\r\n                    <img\r\n                      style={{\r\n                        height: \"100%\",\r\n                        width: \"100%\",\r\n                        maxWidth: \"400px\",\r\n                        maxHeight: \"400px\",\r\n                      }}\r\n                      src={`${server_api}/${this.props.imgURL}`}\r\n                    />\r\n                  </Col>\r\n                  <Col style={{ textAlign: \"left\" }}>\r\n                    <label>ชื่อโพส: {this.props.name}</label>\r\n                    <br />\r\n                    <label>รายละเอียดเพิ่มเติม: {this.props.detail}</label>\r\n                    <br />\r\n                    <label>จำนวนคนสนใจ: {this.props.score} คน</label>\r\n                    <br />\r\n                    {this.props.user.role === \"\" ? (\r\n                      <label\r\n                        style={{\r\n                          fontSize: \"15px\",\r\n                          color: \"white\",\r\n                        }}\r\n                      >\r\n                        กรุณาลงชื่อเข้าใช้เพื่อสามารถแสดงความสนใจต่อโพส\r\n                      </label>\r\n                    ) : (\r\n                      <></>\r\n                    )}\r\n                    {this.props.user.role === \"admin\" ? (\r\n                      <img\r\n                        onClick={() =>\r\n                          this.props.deletePost(\r\n                            this.props.id,\r\n                            this.props.imgURL\r\n                          )\r\n                        }\r\n                        style={{\r\n                          fontSize: \"10px\",\r\n                          left: 0,\r\n                          width: \"40px\",\r\n                          height: \"45px\",\r\n                          cursor: \"pointer\",\r\n                        }}\r\n                        onMouseOver={this.binInMouseOver}\r\n                        onMouseOut={this.binInMouseOut}\r\n                        src={this.state.binInsrc}\r\n                      />\r\n                    ) : (\r\n                      <></>\r\n                    )}\r\n                  </Col>\r\n                </Row>\r\n              </Container>\r\n            </div>\r\n          }\r\n        ></SkyLight>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStatetoProps = (state) => {\r\n  return {\r\n    user: state.user,\r\n    form: state.form,\r\n  };\r\n};\r\n\r\nexport default connect(mapStatetoProps)(Post);\r\n","D:\\ownerProject\\web\\src\\components\\Sidebar.js",["108"],"import React, { useEffect } from \"react\";\r\nimport \"../App.css\";\r\nimport { SidebarData } from \"./SidebarData\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport {\r\n  userMapStatetoProps,\r\n  userMapDispatchtoProps,\r\n} from \"../states/userState\";\r\nimport { connect } from \"react-redux\";\r\nfunction Sidebar(props) {\r\n  useEffect(() => {\r\n    console.log(props.user.role);\r\n  }, []);\r\n  return (\r\n    <div className=\"Sidebar\">\r\n      {props.user.role !== \"admin\" ? (\r\n        <div>\r\n          {SidebarData.filter((item) => item.title !== \"เพิ่มฟอร์ม\").map(\r\n            (item, index) => {\r\n              return (\r\n                <Link to={item.path} key={index}>\r\n                  <Button\r\n                    variant=\"outline-info\"\r\n                    style={{\r\n                      borderRadius: \"0px\",\r\n                      width: \"100%\",\r\n                      borderColor: \"white\",\r\n                    }}\r\n                  >\r\n                    <span>{item.title}</span>\r\n                  </Button>\r\n                </Link>\r\n              );\r\n            }\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          {SidebarData.map((item, index) => {\r\n            return (\r\n              <Link to={item.path} key={index}>\r\n                <Button\r\n                  variant=\"outline-info\"\r\n                  style={{\r\n                    borderRadius: \"0px\",\r\n                    width: \"100%\",\r\n                    borderColor: \"white\",\r\n                  }}\r\n                >\r\n                  <span>{item.title}</span>\r\n                </Button>\r\n              </Link>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect(userMapStatetoProps, userMapDispatchtoProps)(Sidebar);\r\n","D:\\ownerProject\\web\\src\\form.js",["109"],"import \"./App.css\";\r\nimport Input from \"./components/Input\";\r\nimport { connect } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nfunction Form(props) {\r\n  function addForm(newData) {\r\n    props.changeForm([newData, ...props.form]);\r\n  }\r\n  useEffect(() => {\r\n    console.log(props);\r\n  }, []);\r\n  return (\r\n    <div>\r\n      {props.user.role !== \"admin\" ? (\r\n        <></>\r\n      ) : (\r\n        <div>\r\n          <Input addForm={addForm} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nconst mapStatetoprops = (state) => {\r\n  return {\r\n    form: state.form,\r\n    user: state.user,\r\n  };\r\n};\r\n\r\nconst mapDispatchtoProps = (dispatch) => {\r\n  return {\r\n    changeForm: (form) => {\r\n      dispatch({\r\n        type: \"changeForm\",\r\n        item: form,\r\n      });\r\n    },\r\n    userLogin: (login, _id, username, role) => {\r\n      dispatch({\r\n        type: \"login\",\r\n        payload: {\r\n          login,\r\n          _id,\r\n          username,\r\n          role,\r\n        },\r\n      });\r\n    },\r\n  };\r\n};\r\nexport default connect(mapStatetoprops, mapDispatchtoProps)(Form);\r\n","D:\\ownerProject\\web\\src\\home.js",["110","111","112","113","114"],"import \"./App.css\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Post from \"./components/Post\";\r\nimport axios from \"axios\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { Ring } from \"react-awesome-spinners\";\r\nimport { server_api } from \"./api/api\";\r\n// import FacebookLogin from \"react-facebook-login\";\r\nfunction Home(props) {\r\n  const [posts, setPosts] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  // function addPost(title, imgURL) {\r\n  //   const newPost = { id, title, imgURL };\r\n  //   setPosts([newPost, ...posts]);\r\n  //   id += 1;\r\n  // }\r\n  useEffect(() => {\r\n    if (props.form.length === 0) {\r\n      axios({\r\n        url: `${server_api}/api/post/get`,\r\n        method: \"get\",\r\n        headers: {\r\n          \"Content-Type\": \"applicatoin/json\",\r\n        },\r\n      }).then((result) => {\r\n        setPosts(result.data.data);\r\n        props.changeForm(result.data.data);\r\n        setLoading(false);\r\n      });\r\n    } else {\r\n      setPosts(props.form);\r\n    }\r\n  }, []);\r\n  function likePost(ID) {\r\n    axios({\r\n      url: `${server_api}/api/post/like`,\r\n      method: \"post\",\r\n      data: {\r\n        postID: ID,\r\n      },\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: localStorage.getItem(\"token\"),\r\n      },\r\n    });\r\n    var update = [];\r\n    posts.map((post) => {\r\n      if (post._id === ID) {\r\n        post.score += 1;\r\n        post.userList.push(props.user._id);\r\n      }\r\n      update.push(post);\r\n    });\r\n    setPosts(update);\r\n    props.changeForm(update);\r\n  }\r\n  function unlikePost(ID) {\r\n    axios({\r\n      url: `${server_api}/api/post/unlike`,\r\n      method: \"post\",\r\n      data: {\r\n        postID: ID,\r\n      },\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: localStorage.getItem(\"token\"),\r\n      },\r\n    });\r\n    var update = [];\r\n    posts.map((post) => {\r\n      {\r\n        if (post._id === ID) {\r\n          post.score -= 1;\r\n          const listUpdate = post.userList.filter(\r\n            (list) => list !== props.user._id\r\n          );\r\n          post.userList = listUpdate;\r\n        }\r\n        update.push(post);\r\n      }\r\n    });\r\n    setPosts(update);\r\n    props.changeForm(update);\r\n  }\r\n  function deletePost(id, imgURL) {\r\n    axios({\r\n      url: `${server_api}/api/post/delete`,\r\n      method: \"post\",\r\n      data: {\r\n        _id: id,\r\n        path: imgURL,\r\n      },\r\n    }).then((result) => {\r\n      alert(\"ลบฟอร์มสำเร็จ\");\r\n    });\r\n    const updatePost = posts.filter((post) => post._id !== id);\r\n    setPosts(updatePost);\r\n    props.changeForm(updatePost);\r\n  }\r\n  // const componentClicked = (data) => {\r\n  //   console.log(\"data: \", data);\r\n  // };\r\n  // const responseFacebook = (response) => {\r\n  //   console.log(response);\r\n  // };\r\n  return (\r\n    <div\r\n      className=\"head\"\r\n      style={{\r\n        position: \"absolute\",\r\n        top: 0,\r\n        right: 0,\r\n        top: 50,\r\n      }}\r\n    >\r\n      <div className=\"Input__header\">post</div>\r\n      <div className=\"Form\">\r\n        {posts.length === 0 ? (\r\n          loading && (\r\n            <Ring style={{ size: 64, color: \"#00bfff\", sizeUnit: \"px\" }} />\r\n          )\r\n        ) : (\r\n          <div>\r\n            {/* <FacebookLogin\r\n              appId=\"461858064845560\"\r\n              autoLoad={false}\r\n              fields=\"name,email,picture\"\r\n              onClick={componentClicked}\r\n              callback={responseFacebook}\r\n            /> */}\r\n            <Container>\r\n              <Row>\r\n                {posts.map((post) => (\r\n                  <Col key={post._id}>\r\n                    <Post\r\n                      key={post._id}\r\n                      id={post._id}\r\n                      name={post.name}\r\n                      imgURL={post.image}\r\n                      detail={post.detail}\r\n                      score={post.score}\r\n                      userList={post.userList}\r\n                      deletePost={deletePost}\r\n                      likePost={likePost}\r\n                      unlikePost={unlikePost}\r\n                    />\r\n                  </Col>\r\n                ))}\r\n              </Row>\r\n            </Container>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nconst mapStatetoProps = (state) => {\r\n  return {\r\n    user: state.user,\r\n    form: state.form,\r\n  };\r\n};\r\nconst mapDispatchtoProps = (dispatch) => {\r\n  return {\r\n    changeForm: (form) => {\r\n      dispatch({\r\n        type: \"changeForm\",\r\n        item: form,\r\n      });\r\n    },\r\n    likeForm: (ID, userID) => {\r\n      dispatch({\r\n        type: \"like\",\r\n        payload: {\r\n          id: ID,\r\n          userID: userID,\r\n        },\r\n      });\r\n    },\r\n    userLogin: (login, _id, username, role, chatRecieverID, token) => {\r\n      dispatch({\r\n        type: \"login\",\r\n        payload: {\r\n          login,\r\n          _id,\r\n          username,\r\n          role,\r\n          chatRecieverID,\r\n          token,\r\n        },\r\n      });\r\n    },\r\n  };\r\n};\r\nexport default connect(mapStatetoProps, mapDispatchtoProps)(Home);\r\n","D:\\ownerProject\\web\\src\\components\\SidebarData.js",[],"D:\\ownerProject\\web\\src\\components\\User.js",["115","116"],"import React from \"react\";\r\nimport \"../App.css\";\r\nimport { SidebarData } from \"./SidebarData\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction User(props) {\r\n  return <h1>{props.username}</h1>;\r\n}\r\n\r\nexport default User;\r\n",["117","118"],"D:\\ownerProject\\web\\src\\login.js",[],"D:\\ownerProject\\web\\src\\components\\Login.js",["119","120"],"import React, { useState } from \"react\";\r\nimport \"../App.css\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { Button } from \"react-bootstrap\";\r\n// import FacebookLogin from \"react-facebook-login\";\r\nimport { server_api } from \"../api/api\";\r\nfunction Login({ sWord, userLogin }) {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const history = useHistory();\r\n  const [errMsg, setErrMsg] = useState(\"\");\r\n  const responseFacebook = (response) => {\r\n    console.log(response);\r\n  };\r\n  function auth() {\r\n    if (sWord === \"login\") {\r\n      axios({\r\n        url: `${server_api}/api/user/login`,\r\n        method: \"post\",\r\n        data: { username: username, password: password },\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }).then((res) => {\r\n        if (res.data.data.status === true) {\r\n          userLogin(\r\n            res.data.data.resultLogin._id,\r\n            res.data.data.resultLogin.username,\r\n            res.data.data.resultLogin.firstname,\r\n            res.data.data.resultLogin.lastname,\r\n            res.data.data.resultLogin.avatar,\r\n            res.data.data.resultLogin.role,\r\n            res.data.data.resultLogin.chatRecieverID,\r\n            res.data.data.token\r\n          );\r\n          localStorage.setItem(\"token\", res.data.data.token);\r\n          localStorage.setItem(\"userID\", res.data.data.resultLogin._id);\r\n          alert(\"เข้าสู่ระบบสำเร็จ\");\r\n          history.push(\"/\");\r\n        } else {\r\n          setErrMsg(res.data.data.errMsg);\r\n        }\r\n      });\r\n    } else {\r\n      axios({\r\n        url: `${server_api}/api/user/register`,\r\n        method: \"post\",\r\n        data: { username: username, password: password },\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }).then((res) => {\r\n        console.log(res.data.data.status);\r\n        if (res.data.data.status === true) {\r\n          alert(\"สมัครสมาชิกสำเร็จ\");\r\n          history.push(\"./ลงชื่อเข้าใช้\");\r\n        } else {\r\n          setErrMsg(\"ไม่สามารถใช้ชื่อผู้ใช้งานนี้ได้\");\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <header\r\n      className=\"login_form\"\r\n      style={{ position: \"absolute\", top: 0, right: 0, top: 50 }}\r\n      onKeyDown={(e) => {\r\n        if (e.code === \"Enter\") {\r\n          auth();\r\n        }\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          width: \"700px\",\r\n          height: \"250px\",\r\n          background: \"white\",\r\n          margin: \"10px auto 0px\",\r\n        }}\r\n      >\r\n        <label className=\"login_label\">\r\n          ชื่อผู้เข้าใช้งาน\r\n          <input\r\n            type=\"text\"\r\n            className=\"login_text\"\r\n            placeholder=\"ตัวอย่าง example1234\"\r\n            onChange={(e) => setUsername(e.target.value)}\r\n          />\r\n        </label>\r\n        <label className=\"login_label\">\r\n          รหัสผ่าน\r\n          <input\r\n            type=\"text\"\r\n            className=\"login_text\"\r\n            placeholder=\"ตัวอย่าง 123456789\"\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </label>\r\n        {sWord === \"login\" ? (\r\n          <div>\r\n            <Button variant=\"secondary\" style={{ right: 0 }} onClick={auth}>\r\n              เข้าสู่ระบบ\r\n            </Button>\r\n            <br />\r\n            <label className=\"login_label\">\r\n              หากยังไม่มีข้อมูล\r\n              <Link to=\"/สมัครสมาชิก\">สมัครสมาชิก</Link>\r\n            </label>\r\n            <br />\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <Button style={{ right: 0 }} variant=\"secondary\" onClick={auth}>\r\n              สมัครสมาชิก\r\n            </Button>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <label className=\"bg-danger text-white mt-0\" style={{ width: \"700px\" }}>\r\n        {errMsg}\r\n      </label>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","D:\\ownerProject\\web\\src\\states\\formState.js",[],"D:\\ownerProject\\web\\src\\states\\userState.js",[],"D:\\ownerProject\\web\\src\\register.js",[],"D:\\ownerProject\\web\\src\\chatLobby.js",["121"],"D:\\ownerProject\\web\\src\\Chatroom.js",["122","123"],"import \"./App.css\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Chat from \"./components/Chat\";\r\nimport { Ring } from \"react-awesome-spinners\";\r\nimport {\r\n  userMapDispatchtoProps,\r\n  userMapStatetoProps,\r\n} from \"./states/userState\";\r\nimport { connect } from \"react-redux\";\r\nimport { socket } from \"./App\";\r\nimport { server_api } from \"./api/api\";\r\nfunction Chatroom(props) {\r\n  const [text, setText] = useState(\"\");\r\n  const [loading, setLoading] = useState(true);\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    props.updateChat([]);\r\n    // do it before can resolve\r\n    // socket.on(\"recieve_message\", (data) => {\r\n    //   console.log(props);\r\n    //   props.updateChat(data);\r\n    // });\r\n    socket.on(\"recieve_message\", (data) => {\r\n      props.updateChatmessage(data);\r\n      if (!props.user.chatRecieverID.includes(data.senderID)) {\r\n        var arr = props.user.chatRecieverID;\r\n        arr.push(data.senderID);\r\n        props.userFetchChat(arr);\r\n      }\r\n    });\r\n    if (props.location.state === undefined) {\r\n      history.push(\"/สนทนา\");\r\n    } else {\r\n      axios({\r\n        url: `${server_api}/api/chat/information`,\r\n        method: \"post\",\r\n        data: { recieverID: props.location.state.id },\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: props.user.token,\r\n        },\r\n      })\r\n        .then(async (result) => {\r\n          await props.updateChat(result.data.data.history);\r\n          localStorage.setItem(\"latest-chat\", props.location.state.user._id);\r\n          setLoading(false);\r\n        })\r\n        .catch((err) => {\r\n          history.push(\"/สนทนา\");\r\n        });\r\n    }\r\n  }, []);\r\n  function sendChat() {\r\n    props.updateChat([\r\n      ...props.chat,\r\n      { senderID: props.location.state.user._id, message: text },\r\n    ]);\r\n    setText(\"\");\r\n    if (!props.user.chatRecieverID.includes(props.location.state.id)) {\r\n      var arr = props.user.chatRecieverID;\r\n      arr.push(props.location.state.id);\r\n      props.userFetchChat(arr);\r\n      axios({\r\n        url: `${server_api}/api/chat/create`,\r\n        method: \"post\",\r\n        data: { recieverID: props.location.state.id },\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: props.user.token,\r\n        },\r\n      });\r\n    }\r\n    socket.emit(\"message\", {\r\n      message: text,\r\n      msgType: \"text\",\r\n      senderID: props.location.state.user._id,\r\n      recieverID: props.location.state.id,\r\n      socketReciever: props.location.state.socketID,\r\n    });\r\n  }\r\n  return (\r\n    <div\r\n      className=\"ChatRoom\"\r\n      style={{\r\n        position: \"absolute\",\r\n        top: 0,\r\n        right: 1,\r\n        top: 50,\r\n        height: \"665px\",\r\n      }}\r\n      onKeyDown={(e) => {\r\n        if (e.code === \"Enter\") {\r\n          sendChat();\r\n        }\r\n      }}\r\n    >\r\n      {console.log(props.location.state)}\r\n      {props.location.state !== undefined ? (\r\n        <div\r\n          style={{\r\n            background: \"white\",\r\n            height: \"500px\",\r\n            width: \"60%\",\r\n            margin: \"40px auto\",\r\n          }}\r\n        >\r\n          <label\r\n            style={{\r\n              background: \"black\",\r\n              color: \"white\",\r\n              width: \"100%\",\r\n              height: \"5%\",\r\n              margin: \"0\",\r\n            }}\r\n          >\r\n            {props.location.state.username}\r\n          </label>\r\n          <div\r\n            style={{\r\n              background: \"grey\",\r\n              width: \"100%\",\r\n              height: \"85%\",\r\n              border: \"4px solid black\",\r\n              flex: 1,\r\n              overflow: \"auto\",\r\n            }}\r\n          >\r\n            {loading ? (\r\n              <Ring style={{ size: 64, color: \"#00bfff\", sizeUnit: \"px\" }} />\r\n            ) : (\r\n              <Container>\r\n                {props.chat.map((msg, index) => {\r\n                  return (\r\n                    <Row key={index}>\r\n                      <Col>\r\n                        <Chat\r\n                          senderID={msg.senderID}\r\n                          message={msg.message}\r\n                          uid={props.location.state.user._id}\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n                  );\r\n                })}\r\n              </Container>\r\n            )}\r\n          </div>\r\n          <input\r\n            type=\"text\"\r\n            style={{\r\n              width: \"90%\",\r\n              height: \"10%\",\r\n              border: \"4px solid black\",\r\n              float: \"left\",\r\n              display: \"inline-block\",\r\n              paddingLeft: \"10px\",\r\n            }}\r\n            placeholder=\"type here\"\r\n            value={text}\r\n            onChange={(e) => {\r\n              setText(e.target.value);\r\n            }}\r\n          />\r\n          <Button\r\n            style={{\r\n              float: \"right\",\r\n              width: \"10%\",\r\n              height: \"10%\",\r\n              borderRadius: \"0\",\r\n              border: \"0\",\r\n            }}\r\n            onClick={() => {\r\n              sendChat();\r\n            }}\r\n          >\r\n            send\r\n          </Button>\r\n        </div>\r\n      ) : (\r\n        <>{history.push(\"/สนทนา\")}</>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect(userMapStatetoProps, userMapDispatchtoProps)(Chatroom);\r\n","D:\\ownerProject\\web\\src\\components\\Chat.js",[],"D:\\ownerProject\\web\\src\\ChatLobby.js",["124","125","126"],"D:\\ownerProject\\web\\src\\api\\api.js",[],"D:\\ownerProject\\web\\src\\Editprofile.js",["127","128","129","130"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./App.css\";\r\nimport { InputGroup, FormControl, Button } from \"react-bootstrap\";\r\nimport {\r\n  userMapStatetoProps,\r\n  userMapDispatchtoProps,\r\n} from \"./states/userState\";\r\nimport { connect } from \"react-redux\";\r\nimport { server_api } from \"./api/api\";\r\nfunction Editprofile(props) {\r\n  var formData = new FormData();\r\n  const [edit, setEdit] = useState(false);\r\n  const [firstname, setFirstname] = useState(\"\");\r\n  const [lastname, setLastname] = useState(\"\");\r\n  const [imgURL, setImgURL] = useState(\"\");\r\n  const [file, setFile] = useState();\r\n  return (\r\n    <div\r\n      className=\"head\"\r\n      style={{\r\n        position: \"absolute\",\r\n        top: 0,\r\n        right: 0,\r\n        top: 50,\r\n        height: \"91.5%\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          width: \"700px\",\r\n          minHeight: \"350px\",\r\n          background: \"white\",\r\n          margin: \"10px auto 0px\",\r\n        }}\r\n      >\r\n        {edit ? (\r\n          <>\r\n            <InputGroup\r\n              className=\"mb-1 pt-3\"\r\n              style={{ justifyContent: \"center\" }}\r\n            >\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text id=\"inputGroup-sizing-default\">\r\n                  ชื่อบัญชีผู้ใช้งาน : {props.user.username}\r\n                </InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n            </InputGroup>\r\n            <InputGroup className=\"mb-1\" style={{ justifyContent: \"center\" }}>\r\n              <div style={{ width: \"45%\" }}>\r\n                <InputGroup.Prepend>\r\n                  <InputGroup.Text id=\"inputGroup-sizing-default\">\r\n                    ชื่อจริง :\r\n                  </InputGroup.Text>\r\n                  <FormControl\r\n                    aria-label=\"Default\"\r\n                    aria-describedby=\"inputGroup-sizing-default\"\r\n                    placeholder={props.user.firstname}\r\n                    value={firstname}\r\n                    onChange={(e) => {\r\n                      setFirstname(e.target.value);\r\n                    }}\r\n                  />\r\n                </InputGroup.Prepend>\r\n              </div>\r\n            </InputGroup>\r\n            <InputGroup className=\"mb-1\" style={{ justifyContent: \"center\" }}>\r\n              <div style={{ width: \"45%\" }}>\r\n                <InputGroup.Prepend>\r\n                  <InputGroup.Text id=\"inputGroup-sizing-default\">\r\n                    นามสกุล :\r\n                  </InputGroup.Text>\r\n                  <FormControl\r\n                    aria-label=\"Default\"\r\n                    aria-describedby=\"inputGroup-sizing-default\"\r\n                    placeholder={props.user.lastname}\r\n                    value={lastname}\r\n                    onChange={(e) => {\r\n                      setLastname(e.target.value);\r\n                    }}\r\n                  />\r\n                </InputGroup.Prepend>\r\n              </div>\r\n            </InputGroup>\r\n            <input\r\n              type=\"file\"\r\n              onChange={(e) => {\r\n                //console.log(e.target.files[0]);\r\n                setFile(e.target.files[0]);\r\n                setImgURL(e.target.files[0].name);\r\n              }}\r\n            />\r\n            <br />\r\n            {props.user.avatar === \"\" ? (\r\n              <>\r\n                <label>รูปโปรไฟล์</label>\r\n                <br />\r\n                <label>ยังไม่มีการบันทึก</label>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <label>รูปโปรไฟล์</label>\r\n                <br />\r\n                <img\r\n                  style={{\r\n                    width: \"100px\",\r\n                    height: \"100px\",\r\n                    margin: \"auto\",\r\n                  }}\r\n                  src={`${server_api}/${props.user.avatar}`}\r\n                />\r\n              </>\r\n            )}\r\n            <br />\r\n            <Button\r\n              className=\"mb-3 mt-3\"\r\n              onClick={() => {\r\n                setEdit(false);\r\n              }}\r\n            >\r\n              ยกเลิก\r\n            </Button>\r\n            <Button\r\n              className=\"mb-3 ml-2 mt-3\"\r\n              onClick={async () => {\r\n                if (imgURL !== \"\") {\r\n                  formData.append(\"productImage\", file);\r\n                  formData.append(\"newFname\", firstname);\r\n                  formData.append(\"newLname\", lastname);\r\n                  formData.append(\"oldFname\", props.user.firstname);\r\n                  formData.append(\"oldLname\", props.user.lastname);\r\n                  axios({\r\n                    url: `${server_api}/api/post/updateProfile`,\r\n                    method: \"post\",\r\n                    data: formData,\r\n                    headers: {\r\n                      \"Content-Type\": \"application/json\",\r\n                      Authorization: props.user.token,\r\n                    },\r\n                  }).then(async (res) => {\r\n                    if (res.data.success) {\r\n                      localStorage.setItem(\"token\", res.data.data);\r\n                    }\r\n                    alert(\"แก้ไขข้อมูลสำเร็จ\");\r\n                    window.location.reload(true);\r\n                  });\r\n                } else {\r\n                  axios({\r\n                    url: `${server_api}/api/post/updateProfile`,\r\n                    method: \"post\",\r\n                    data: {\r\n                      newFname: firstname,\r\n                      newLname: lastname,\r\n                      oldFname: props.user.firstname,\r\n                      oldLname: props.user.lastname,\r\n                      avatar: props.user.avatar,\r\n                    },\r\n                    headers: {\r\n                      \"Content-Type\": \"application/json\",\r\n                      Authorization: props.user.token,\r\n                    },\r\n                  }).then((res) => {\r\n                    if (res.data.success) {\r\n                      localStorage.setItem(\"token\", res.data.data);\r\n                    }\r\n                    alert(\"แก้ไขข้อมูลสำเร็จ\");\r\n                    window.location.reload(true);\r\n                  });\r\n                }\r\n              }}\r\n            >\r\n              บันทึก\r\n            </Button>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <InputGroup\r\n              className=\"mb-1 pt-3\"\r\n              style={{ justifyContent: \"center\" }}\r\n            >\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text id=\"inputGroup-sizing-default\">\r\n                  ชื่อบัญชีผู้ใช้งาน : {props.user.username}\r\n                </InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n            </InputGroup>\r\n            <InputGroup className=\"mb-1 \" style={{ justifyContent: \"center\" }}>\r\n              <InputGroup.Prepend>\r\n                {props.user.firstname === \"\" ? (\r\n                  <InputGroup.Text id=\"inputGroup-sizing-default\">\r\n                    ชื่อจริง : ยังไม่มีการบันทึก\r\n                  </InputGroup.Text>\r\n                ) : (\r\n                  <InputGroup.Text id=\"inputGroup-sizing-default\">\r\n                    ชื่อจริง : {props.user.firstname}\r\n                  </InputGroup.Text>\r\n                )}\r\n              </InputGroup.Prepend>\r\n            </InputGroup>\r\n            <InputGroup className=\"mb-1 \" style={{ justifyContent: \"center\" }}>\r\n              <InputGroup.Prepend>\r\n                {props.user.lastname === \"\" ? (\r\n                  <InputGroup.Text id=\"inputGroup-sizing-default\">\r\n                    นามสกุล : ยังไม่มีการบันทึก\r\n                  </InputGroup.Text>\r\n                ) : (\r\n                  <InputGroup.Text id=\"inputGroup-sizing-default\">\r\n                    นามสกุล : {props.user.lastname}\r\n                  </InputGroup.Text>\r\n                )}\r\n              </InputGroup.Prepend>\r\n            </InputGroup>\r\n            <br />\r\n            {props.user.avatar === \"\" ? (\r\n              <>\r\n                <label>รูปโปรไฟล์</label>\r\n                <br />\r\n                <label>ยังไม่มีการบันทึก</label>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <label>รูปโปรไฟล์</label>\r\n                <br />\r\n                <img\r\n                  style={{\r\n                    width: \"100px\",\r\n                    height: \"100px\",\r\n                    margin: \"auto\",\r\n                  }}\r\n                  src={`${server_api}/${props.user.avatar}`}\r\n                />\r\n              </>\r\n            )}\r\n            <br />\r\n            <Button\r\n              className=\"mb-3\"\r\n              onClick={() => {\r\n                setEdit(true);\r\n              }}\r\n            >\r\n              แก้ไขข้อมูล\r\n            </Button>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect(\r\n  userMapStatetoProps,\r\n  userMapDispatchtoProps\r\n)(Editprofile);\r\n",{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","severity":1,"message":"136","line":43,"column":6,"nodeType":"137","endLine":43,"endColumn":8,"suggestions":"138"},{"ruleId":"139","severity":1,"message":"140","line":47,"column":11,"nodeType":"141","messageId":"142","endLine":47,"endColumn":14},{"ruleId":"143","severity":1,"message":"144","line":60,"column":17,"nodeType":"145","endLine":74,"endColumn":19},{"ruleId":"143","severity":1,"message":"144","line":76,"column":17,"nodeType":"145","endLine":91,"endColumn":19},{"ruleId":"143","severity":1,"message":"144","line":113,"column":13,"nodeType":"145","endLine":131,"endColumn":15},{"ruleId":"143","severity":1,"message":"144","line":137,"column":13,"nodeType":"145","endLine":144,"endColumn":15},{"ruleId":"143","severity":1,"message":"144","line":165,"column":21,"nodeType":"145","endLine":173,"endColumn":23},{"ruleId":"143","severity":1,"message":"144","line":195,"column":23,"nodeType":"145","endLine":212,"endColumn":25},{"ruleId":"135","severity":1,"message":"146","line":14,"column":6,"nodeType":"137","endLine":14,"endColumn":8,"suggestions":"147"},{"ruleId":"135","severity":1,"message":"148","line":11,"column":6,"nodeType":"137","endLine":11,"endColumn":8,"suggestions":"149"},{"ruleId":"135","severity":1,"message":"150","line":34,"column":6,"nodeType":"137","endLine":34,"endColumn":8,"suggestions":"151"},{"ruleId":"152","severity":1,"message":"153","line":48,"column":22,"nodeType":"154","messageId":"155","endLine":48,"endColumn":24},{"ruleId":"152","severity":1,"message":"153","line":71,"column":22,"nodeType":"154","messageId":"155","endLine":71,"endColumn":24},{"ruleId":"156","severity":1,"message":"157","line":72,"column":7,"nodeType":"158","messageId":"159","endLine":81,"endColumn":8},{"ruleId":"139","severity":1,"message":"140","line":114,"column":9,"nodeType":"141","messageId":"142","endLine":114,"endColumn":12},{"ruleId":"160","severity":1,"message":"161","line":3,"column":10,"nodeType":"162","messageId":"163","endLine":3,"endColumn":21},{"ruleId":"160","severity":1,"message":"164","line":4,"column":10,"nodeType":"162","messageId":"163","endLine":4,"endColumn":14},{"ruleId":"131","replacedBy":"165"},{"ruleId":"133","replacedBy":"166"},{"ruleId":"160","severity":1,"message":"167","line":13,"column":9,"nodeType":"162","messageId":"163","endLine":13,"endColumn":25},{"ruleId":"139","severity":1,"message":"140","line":68,"column":56,"nodeType":"141","messageId":"142","endLine":68,"endColumn":59},{"ruleId":"139","severity":1,"message":"140","line":16,"column":9,"nodeType":"141","messageId":"142","endLine":16,"endColumn":12},{"ruleId":"135","severity":1,"message":"136","line":56,"column":6,"nodeType":"137","endLine":56,"endColumn":8,"suggestions":"168"},{"ruleId":"139","severity":1,"message":"140","line":92,"column":9,"nodeType":"141","messageId":"142","endLine":92,"endColumn":12},{"ruleId":"135","severity":1,"message":"150","line":23,"column":6,"nodeType":"137","endLine":23,"endColumn":8,"suggestions":"169"},{"ruleId":"139","severity":1,"message":"140","line":32,"column":9,"nodeType":"141","messageId":"142","endLine":32,"endColumn":12},{"ruleId":"143","severity":1,"message":"144","line":93,"column":29,"nodeType":"145","endLine":101,"endColumn":31},{"ruleId":"160","severity":1,"message":"170","line":1,"column":17,"nodeType":"162","messageId":"163","endLine":1,"endColumn":26},{"ruleId":"139","severity":1,"message":"140","line":25,"column":9,"nodeType":"141","messageId":"142","endLine":25,"endColumn":12},{"ruleId":"143","severity":1,"message":"144","line":104,"column":17,"nodeType":"145","endLine":111,"endColumn":19},{"ruleId":"143","severity":1,"message":"144","line":224,"column":17,"nodeType":"145","endLine":231,"endColumn":19},"no-native-reassign",["171"],"no-negated-in-lhs",["172"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["173"],"no-dupe-keys","Duplicate key 'top'.","ObjectExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'props.user.role'. Either include it or remove the dependency array.",["174"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.",["175"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["176"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-unused-vars","'SidebarData' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.",["171"],["172"],"'responseFacebook' is assigned a value but never used.",["177"],["178"],"'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},{"desc":"183","fix":"184"},{"desc":"183","fix":"185"},{"desc":"179","fix":"186"},{"desc":"183","fix":"187"},"Update the dependencies array to be: [history, props]",{"range":"188","text":"189"},"Update the dependencies array to be: [props.user.role]",{"range":"190","text":"191"},"Update the dependencies array to be: [props]",{"range":"192","text":"193"},{"range":"194","text":"193"},{"range":"195","text":"189"},{"range":"196","text":"193"},[1331,1333],"[history, props]",[416,418],"[props.user.role]",[298,300],"[props]",[1071,1073],[1857,1859],[762,764]]